services:
  test_db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_library_manager
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d test_library_manager  || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  tests:
    build: .
    command: sh -c "echo 'wait 15 sec' && sleep 15 && alembic upgrade head && pytest -s -vv"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_library_manager
      - DB_SOCKET=test_db
      - DB_LOGS=true
    depends_on:
      test_db:
        condition: service_healthy
    networks:
      - app-network
  db:
    image: postgres:13-alpine
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  app:
    build: .
    command: sh -c "sleep 5 && alembic upgrade head && python main.py"
    container_name: app
    depends_on:
      db:
        condition: service_healthy
      tests:
        condition: service_completed_successfully
    env_file: .env
    ports:
      - "10000:10000"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge